// Code generated by SQLBoiler 4.18.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import "testing"

// This test suite runs each operation test in parallel.
// Example, if your database has 3 tables, the suite will run:
// table1, table2 and table3 Delete in parallel
// table1, table2 and table3 Insert in parallel, and so forth.
// It does NOT run each operation group in parallel.
// Separating the tests thusly grants avoidance of Postgres deadlocks.
func TestParent(t *testing.T) {
	t.Run("Accounts", testAccounts)
	t.Run("Addresses", testAddresses)
	t.Run("CartDetails", testCartDetails)
	t.Run("Districts", testDistricts)
	t.Run("Invoices", testInvoices)
	t.Run("InvoiceDetails", testInvoiceDetails)
	t.Run("InvoiceStatuses", testInvoiceStatuses)
	t.Run("Products", testProducts)
	t.Run("ProductImages", testProductImages)
	t.Run("ProductTypes", testProductTypes)
	t.Run("Provinces", testProvinces)
	t.Run("Replies", testReplies)
	t.Run("Reviews", testReviews)
	t.Run("ReviewImages", testReviewImages)
	t.Run("Transactions", testTransactions)
	t.Run("Wards", testWards)
}

func TestDelete(t *testing.T) {
	t.Run("Accounts", testAccountsDelete)
	t.Run("Addresses", testAddressesDelete)
	t.Run("CartDetails", testCartDetailsDelete)
	t.Run("Districts", testDistrictsDelete)
	t.Run("Invoices", testInvoicesDelete)
	t.Run("InvoiceDetails", testInvoiceDetailsDelete)
	t.Run("InvoiceStatuses", testInvoiceStatusesDelete)
	t.Run("Products", testProductsDelete)
	t.Run("ProductImages", testProductImagesDelete)
	t.Run("ProductTypes", testProductTypesDelete)
	t.Run("Provinces", testProvincesDelete)
	t.Run("Replies", testRepliesDelete)
	t.Run("Reviews", testReviewsDelete)
	t.Run("ReviewImages", testReviewImagesDelete)
	t.Run("Transactions", testTransactionsDelete)
	t.Run("Wards", testWardsDelete)
}

func TestQueryDeleteAll(t *testing.T) {
	t.Run("Accounts", testAccountsQueryDeleteAll)
	t.Run("Addresses", testAddressesQueryDeleteAll)
	t.Run("CartDetails", testCartDetailsQueryDeleteAll)
	t.Run("Districts", testDistrictsQueryDeleteAll)
	t.Run("Invoices", testInvoicesQueryDeleteAll)
	t.Run("InvoiceDetails", testInvoiceDetailsQueryDeleteAll)
	t.Run("InvoiceStatuses", testInvoiceStatusesQueryDeleteAll)
	t.Run("Products", testProductsQueryDeleteAll)
	t.Run("ProductImages", testProductImagesQueryDeleteAll)
	t.Run("ProductTypes", testProductTypesQueryDeleteAll)
	t.Run("Provinces", testProvincesQueryDeleteAll)
	t.Run("Replies", testRepliesQueryDeleteAll)
	t.Run("Reviews", testReviewsQueryDeleteAll)
	t.Run("ReviewImages", testReviewImagesQueryDeleteAll)
	t.Run("Transactions", testTransactionsQueryDeleteAll)
	t.Run("Wards", testWardsQueryDeleteAll)
}

func TestSliceDeleteAll(t *testing.T) {
	t.Run("Accounts", testAccountsSliceDeleteAll)
	t.Run("Addresses", testAddressesSliceDeleteAll)
	t.Run("CartDetails", testCartDetailsSliceDeleteAll)
	t.Run("Districts", testDistrictsSliceDeleteAll)
	t.Run("Invoices", testInvoicesSliceDeleteAll)
	t.Run("InvoiceDetails", testInvoiceDetailsSliceDeleteAll)
	t.Run("InvoiceStatuses", testInvoiceStatusesSliceDeleteAll)
	t.Run("Products", testProductsSliceDeleteAll)
	t.Run("ProductImages", testProductImagesSliceDeleteAll)
	t.Run("ProductTypes", testProductTypesSliceDeleteAll)
	t.Run("Provinces", testProvincesSliceDeleteAll)
	t.Run("Replies", testRepliesSliceDeleteAll)
	t.Run("Reviews", testReviewsSliceDeleteAll)
	t.Run("ReviewImages", testReviewImagesSliceDeleteAll)
	t.Run("Transactions", testTransactionsSliceDeleteAll)
	t.Run("Wards", testWardsSliceDeleteAll)
}

func TestExists(t *testing.T) {
	t.Run("Accounts", testAccountsExists)
	t.Run("Addresses", testAddressesExists)
	t.Run("CartDetails", testCartDetailsExists)
	t.Run("Districts", testDistrictsExists)
	t.Run("Invoices", testInvoicesExists)
	t.Run("InvoiceDetails", testInvoiceDetailsExists)
	t.Run("InvoiceStatuses", testInvoiceStatusesExists)
	t.Run("Products", testProductsExists)
	t.Run("ProductImages", testProductImagesExists)
	t.Run("ProductTypes", testProductTypesExists)
	t.Run("Provinces", testProvincesExists)
	t.Run("Replies", testRepliesExists)
	t.Run("Reviews", testReviewsExists)
	t.Run("ReviewImages", testReviewImagesExists)
	t.Run("Transactions", testTransactionsExists)
	t.Run("Wards", testWardsExists)
}

func TestFind(t *testing.T) {
	t.Run("Accounts", testAccountsFind)
	t.Run("Addresses", testAddressesFind)
	t.Run("CartDetails", testCartDetailsFind)
	t.Run("Districts", testDistrictsFind)
	t.Run("Invoices", testInvoicesFind)
	t.Run("InvoiceDetails", testInvoiceDetailsFind)
	t.Run("InvoiceStatuses", testInvoiceStatusesFind)
	t.Run("Products", testProductsFind)
	t.Run("ProductImages", testProductImagesFind)
	t.Run("ProductTypes", testProductTypesFind)
	t.Run("Provinces", testProvincesFind)
	t.Run("Replies", testRepliesFind)
	t.Run("Reviews", testReviewsFind)
	t.Run("ReviewImages", testReviewImagesFind)
	t.Run("Transactions", testTransactionsFind)
	t.Run("Wards", testWardsFind)
}

func TestBind(t *testing.T) {
	t.Run("Accounts", testAccountsBind)
	t.Run("Addresses", testAddressesBind)
	t.Run("CartDetails", testCartDetailsBind)
	t.Run("Districts", testDistrictsBind)
	t.Run("Invoices", testInvoicesBind)
	t.Run("InvoiceDetails", testInvoiceDetailsBind)
	t.Run("InvoiceStatuses", testInvoiceStatusesBind)
	t.Run("Products", testProductsBind)
	t.Run("ProductImages", testProductImagesBind)
	t.Run("ProductTypes", testProductTypesBind)
	t.Run("Provinces", testProvincesBind)
	t.Run("Replies", testRepliesBind)
	t.Run("Reviews", testReviewsBind)
	t.Run("ReviewImages", testReviewImagesBind)
	t.Run("Transactions", testTransactionsBind)
	t.Run("Wards", testWardsBind)
}

func TestOne(t *testing.T) {
	t.Run("Accounts", testAccountsOne)
	t.Run("Addresses", testAddressesOne)
	t.Run("CartDetails", testCartDetailsOne)
	t.Run("Districts", testDistrictsOne)
	t.Run("Invoices", testInvoicesOne)
	t.Run("InvoiceDetails", testInvoiceDetailsOne)
	t.Run("InvoiceStatuses", testInvoiceStatusesOne)
	t.Run("Products", testProductsOne)
	t.Run("ProductImages", testProductImagesOne)
	t.Run("ProductTypes", testProductTypesOne)
	t.Run("Provinces", testProvincesOne)
	t.Run("Replies", testRepliesOne)
	t.Run("Reviews", testReviewsOne)
	t.Run("ReviewImages", testReviewImagesOne)
	t.Run("Transactions", testTransactionsOne)
	t.Run("Wards", testWardsOne)
}

func TestAll(t *testing.T) {
	t.Run("Accounts", testAccountsAll)
	t.Run("Addresses", testAddressesAll)
	t.Run("CartDetails", testCartDetailsAll)
	t.Run("Districts", testDistrictsAll)
	t.Run("Invoices", testInvoicesAll)
	t.Run("InvoiceDetails", testInvoiceDetailsAll)
	t.Run("InvoiceStatuses", testInvoiceStatusesAll)
	t.Run("Products", testProductsAll)
	t.Run("ProductImages", testProductImagesAll)
	t.Run("ProductTypes", testProductTypesAll)
	t.Run("Provinces", testProvincesAll)
	t.Run("Replies", testRepliesAll)
	t.Run("Reviews", testReviewsAll)
	t.Run("ReviewImages", testReviewImagesAll)
	t.Run("Transactions", testTransactionsAll)
	t.Run("Wards", testWardsAll)
}

func TestCount(t *testing.T) {
	t.Run("Accounts", testAccountsCount)
	t.Run("Addresses", testAddressesCount)
	t.Run("CartDetails", testCartDetailsCount)
	t.Run("Districts", testDistrictsCount)
	t.Run("Invoices", testInvoicesCount)
	t.Run("InvoiceDetails", testInvoiceDetailsCount)
	t.Run("InvoiceStatuses", testInvoiceStatusesCount)
	t.Run("Products", testProductsCount)
	t.Run("ProductImages", testProductImagesCount)
	t.Run("ProductTypes", testProductTypesCount)
	t.Run("Provinces", testProvincesCount)
	t.Run("Replies", testRepliesCount)
	t.Run("Reviews", testReviewsCount)
	t.Run("ReviewImages", testReviewImagesCount)
	t.Run("Transactions", testTransactionsCount)
	t.Run("Wards", testWardsCount)
}

func TestHooks(t *testing.T) {
	t.Run("Accounts", testAccountsHooks)
	t.Run("Addresses", testAddressesHooks)
	t.Run("CartDetails", testCartDetailsHooks)
	t.Run("Districts", testDistrictsHooks)
	t.Run("Invoices", testInvoicesHooks)
	t.Run("InvoiceDetails", testInvoiceDetailsHooks)
	t.Run("InvoiceStatuses", testInvoiceStatusesHooks)
	t.Run("Products", testProductsHooks)
	t.Run("ProductImages", testProductImagesHooks)
	t.Run("ProductTypes", testProductTypesHooks)
	t.Run("Provinces", testProvincesHooks)
	t.Run("Replies", testRepliesHooks)
	t.Run("Reviews", testReviewsHooks)
	t.Run("ReviewImages", testReviewImagesHooks)
	t.Run("Transactions", testTransactionsHooks)
	t.Run("Wards", testWardsHooks)
}

func TestInsert(t *testing.T) {
	t.Run("Accounts", testAccountsInsert)
	t.Run("Accounts", testAccountsInsertWhitelist)
	t.Run("Addresses", testAddressesInsert)
	t.Run("Addresses", testAddressesInsertWhitelist)
	t.Run("CartDetails", testCartDetailsInsert)
	t.Run("CartDetails", testCartDetailsInsertWhitelist)
	t.Run("Districts", testDistrictsInsert)
	t.Run("Districts", testDistrictsInsertWhitelist)
	t.Run("Invoices", testInvoicesInsert)
	t.Run("Invoices", testInvoicesInsertWhitelist)
	t.Run("InvoiceDetails", testInvoiceDetailsInsert)
	t.Run("InvoiceDetails", testInvoiceDetailsInsertWhitelist)
	t.Run("InvoiceStatuses", testInvoiceStatusesInsert)
	t.Run("InvoiceStatuses", testInvoiceStatusesInsertWhitelist)
	t.Run("Products", testProductsInsert)
	t.Run("Products", testProductsInsertWhitelist)
	t.Run("ProductImages", testProductImagesInsert)
	t.Run("ProductImages", testProductImagesInsertWhitelist)
	t.Run("ProductTypes", testProductTypesInsert)
	t.Run("ProductTypes", testProductTypesInsertWhitelist)
	t.Run("Provinces", testProvincesInsert)
	t.Run("Provinces", testProvincesInsertWhitelist)
	t.Run("Replies", testRepliesInsert)
	t.Run("Replies", testRepliesInsertWhitelist)
	t.Run("Reviews", testReviewsInsert)
	t.Run("Reviews", testReviewsInsertWhitelist)
	t.Run("ReviewImages", testReviewImagesInsert)
	t.Run("ReviewImages", testReviewImagesInsertWhitelist)
	t.Run("Transactions", testTransactionsInsert)
	t.Run("Transactions", testTransactionsInsertWhitelist)
	t.Run("Wards", testWardsInsert)
	t.Run("Wards", testWardsInsertWhitelist)
}

func TestReload(t *testing.T) {
	t.Run("Accounts", testAccountsReload)
	t.Run("Addresses", testAddressesReload)
	t.Run("CartDetails", testCartDetailsReload)
	t.Run("Districts", testDistrictsReload)
	t.Run("Invoices", testInvoicesReload)
	t.Run("InvoiceDetails", testInvoiceDetailsReload)
	t.Run("InvoiceStatuses", testInvoiceStatusesReload)
	t.Run("Products", testProductsReload)
	t.Run("ProductImages", testProductImagesReload)
	t.Run("ProductTypes", testProductTypesReload)
	t.Run("Provinces", testProvincesReload)
	t.Run("Replies", testRepliesReload)
	t.Run("Reviews", testReviewsReload)
	t.Run("ReviewImages", testReviewImagesReload)
	t.Run("Transactions", testTransactionsReload)
	t.Run("Wards", testWardsReload)
}

func TestReloadAll(t *testing.T) {
	t.Run("Accounts", testAccountsReloadAll)
	t.Run("Addresses", testAddressesReloadAll)
	t.Run("CartDetails", testCartDetailsReloadAll)
	t.Run("Districts", testDistrictsReloadAll)
	t.Run("Invoices", testInvoicesReloadAll)
	t.Run("InvoiceDetails", testInvoiceDetailsReloadAll)
	t.Run("InvoiceStatuses", testInvoiceStatusesReloadAll)
	t.Run("Products", testProductsReloadAll)
	t.Run("ProductImages", testProductImagesReloadAll)
	t.Run("ProductTypes", testProductTypesReloadAll)
	t.Run("Provinces", testProvincesReloadAll)
	t.Run("Replies", testRepliesReloadAll)
	t.Run("Reviews", testReviewsReloadAll)
	t.Run("ReviewImages", testReviewImagesReloadAll)
	t.Run("Transactions", testTransactionsReloadAll)
	t.Run("Wards", testWardsReloadAll)
}

func TestSelect(t *testing.T) {
	t.Run("Accounts", testAccountsSelect)
	t.Run("Addresses", testAddressesSelect)
	t.Run("CartDetails", testCartDetailsSelect)
	t.Run("Districts", testDistrictsSelect)
	t.Run("Invoices", testInvoicesSelect)
	t.Run("InvoiceDetails", testInvoiceDetailsSelect)
	t.Run("InvoiceStatuses", testInvoiceStatusesSelect)
	t.Run("Products", testProductsSelect)
	t.Run("ProductImages", testProductImagesSelect)
	t.Run("ProductTypes", testProductTypesSelect)
	t.Run("Provinces", testProvincesSelect)
	t.Run("Replies", testRepliesSelect)
	t.Run("Reviews", testReviewsSelect)
	t.Run("ReviewImages", testReviewImagesSelect)
	t.Run("Transactions", testTransactionsSelect)
	t.Run("Wards", testWardsSelect)
}

func TestUpdate(t *testing.T) {
	t.Run("Accounts", testAccountsUpdate)
	t.Run("Addresses", testAddressesUpdate)
	t.Run("CartDetails", testCartDetailsUpdate)
	t.Run("Districts", testDistrictsUpdate)
	t.Run("Invoices", testInvoicesUpdate)
	t.Run("InvoiceDetails", testInvoiceDetailsUpdate)
	t.Run("InvoiceStatuses", testInvoiceStatusesUpdate)
	t.Run("Products", testProductsUpdate)
	t.Run("ProductImages", testProductImagesUpdate)
	t.Run("ProductTypes", testProductTypesUpdate)
	t.Run("Provinces", testProvincesUpdate)
	t.Run("Replies", testRepliesUpdate)
	t.Run("Reviews", testReviewsUpdate)
	t.Run("ReviewImages", testReviewImagesUpdate)
	t.Run("Transactions", testTransactionsUpdate)
	t.Run("Wards", testWardsUpdate)
}

func TestSliceUpdateAll(t *testing.T) {
	t.Run("Accounts", testAccountsSliceUpdateAll)
	t.Run("Addresses", testAddressesSliceUpdateAll)
	t.Run("CartDetails", testCartDetailsSliceUpdateAll)
	t.Run("Districts", testDistrictsSliceUpdateAll)
	t.Run("Invoices", testInvoicesSliceUpdateAll)
	t.Run("InvoiceDetails", testInvoiceDetailsSliceUpdateAll)
	t.Run("InvoiceStatuses", testInvoiceStatusesSliceUpdateAll)
	t.Run("Products", testProductsSliceUpdateAll)
	t.Run("ProductImages", testProductImagesSliceUpdateAll)
	t.Run("ProductTypes", testProductTypesSliceUpdateAll)
	t.Run("Provinces", testProvincesSliceUpdateAll)
	t.Run("Replies", testRepliesSliceUpdateAll)
	t.Run("Reviews", testReviewsSliceUpdateAll)
	t.Run("ReviewImages", testReviewImagesSliceUpdateAll)
	t.Run("Transactions", testTransactionsSliceUpdateAll)
	t.Run("Wards", testWardsSliceUpdateAll)
}
